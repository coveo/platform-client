import {ProductsFacetRequestSortType, ProductsSortByType, SortingOrder} from '../Enums.js';

export interface AdvancedFiltersModel {
    queryFilter: string;
}

export interface AdvancedParametersModel {
    /**
     * Used to retrieve debug information. Will have an impact on query performance.
     */
    debug?: boolean;
    /**
     * Used to retrieve all documents regardless of their security model.
     */
    viewAllContent?: boolean;
}

export interface FacetRequestOptions {
    /**
     * Whether to take into account the scores generated by the index when reordering facets.
     */
    enableIndexFacetOrdering?: boolean;
    /**
     * Whether facets should be returned in the same order in which they were requested.
     */
    freezeFacetOrder?: boolean;
}

export interface FacetRequestItem {
    /**
     * The values displayed by the facet in the search interface at the moment of the request.
     */
    currentValues?: any[];
    /**
     * A custom sort order for the facet values.
     */
    customOrder?: string[];
    /**
     * The unique identifier of the facet in the search interface.
     */
    facetId?: string;
    /**
     * The name of the field on which to base the facet request.
     */
    field: string;
    /**
     * Whether the facet is expanded in the search interface at the moment of the request.
     */
    isFieldExpanded?: boolean;
    /**
     * The maximum number of facet values to fetch.
     */
    numberOfValues?: number;
    /**
     * Whether to prevent Coveo ML from automatically selecting facet values.
     */
    preventAutoSelect?: boolean;
    /**
     * The criterion to use for sorting returned facet values.
     */
    sortCriteria?: ProductsFacetRequestSortType;
}

export interface FacetsRequestModel {
    /**
     * The facet options to add to the request.
     */
    options?: FacetRequestOptions;
    /**
     * The facet operations to perform on the products listings.
     */
    requests: FacetRequestItem[];
}

export interface PaginatedModel {
    /**
     * The number of elements to list per page.
     */
    numberOfValues?: number;
    /**
     * The 0-based index number of the page of elements to retrieve.
     */
    page?: number;
}

export interface SortByFields {
    /**
     * The name of the field.
     */
    name: string;
    /**
     * The sorting direction.
     */
    direction: SortingOrder;
}

export interface SortModel {
    /**
     * The name of the field to sort by.
     */
    by: ProductsSortByType;
    /**
     * The fields to take into consideration when sorting.
     */
    fields?: SortByFields[];
}

export interface ProductsRequestModel {
    /**
     * Additional fields allow you to collect additional information, besides the standard data.
     */
    additionalFields?: string[];
    /**
     *
     */
    advancedFiltersModel?: AdvancedFiltersModel;
    /**
     * Advanced parameters to retrieve more information from the search queries.
     */
    advancedParameters?: AdvancedParametersModel;
    /**
     * An anonymous identifier used to determine from which identity the query comes from.
     */
    clientId?: string;
    /**
     * Parameters related to the facet request.
     */
    facets?: FacetsRequestModel;
    /**
     * Pagination parameters for the returned products.
     */
    pagination?: PaginatedModel;
    /**
     * Determines the order in which to retrieve the results.
     */
    sort?: SortModel;
    /**
     * The URL used to retrieve the products listings.
     */
    url: string;
}

export interface FacetResultModel {
    facetId: string;
    field: string;
    fromAutoSelect: boolean;
    indexScore: number;
    mlScore: number;
    moreValuesAvailable: boolean;
    values: any[];
}

export interface FacetResponseModel {
    /**
     * A list of facet results.
     */
    results: FacetResultModel[];
}

export interface PaginationResultModel {
    /**
     * The number of elements.
     */
    totalCount: number;
}

export interface ProductListingIdentityModel {
    /**
     * Associated catalog id.
     */
    catalogId: string;
    /**
     * The product listing unique id.
     */
    id: string;
}

export interface ProductModel {
    additionalFields: Map<string, any>;
    childResults: ProductModel[];
    clickUri: string;
    ec_brand: string;
    ec_category: string[];
    ec_cogs: number;
    ec_description: string;
    ec_images: string[];
    ec_in_stock: boolean;
    ec_item_group_id: string;
    ec_name: string;
    ec_price: number;
    ec_promo_price: number;
    ec_rating: number;
    ec_shortdesc: string;
    ec_thumbnails: string[];
    permanentid: string;
    totalNumberOfChildResults: number;
}

export interface ProductsResultModel {
    /**
     * The execution report.
     */
    executionReport: Map<string, any>;
    /**
     * The list of facet results.
     */
    facets: FacetResponseModel;
    /**
     * The number of total elements returned.
     */
    pagination: PaginationResultModel;
    /**
     * The product listing identity model.
     */
    productListing: ProductListingIdentityModel;
    /**
     * A list of products.
     */
    products: ProductModel[];
    /**
     * The response unique id.
     */
    responseId: string;
}
